format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/Josh/scalaprojects/transjs/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
4 items
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> /Users/Josh/scalaprojects/transjs/target/scala-2.12/test-classes/transjs/CallTest.class
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> /Users/Josh/scalaprojects/transjs/target/scala-2.12/test-classes/transjs/ConsoleTest.class
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> /Users/Josh/scalaprojects/transjs/target/scala-2.12/test-classes/transjs/IfTest.class
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> /Users/Josh/scalaprojects/transjs/target/scala-2.12/test-classes/transjs/StringTest.class
binary dependencies:
3 items
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> /Users/Josh/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> /Users/Josh/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> /Users/Josh/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> transjs.wrappers$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
4 items
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> transjs.CallTest
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> transjs.ConsoleTest
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> transjs.IfTest
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> transjs.StringTest
used names:
43 items
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> <byname>
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> <init>
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> <repeated>
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> A
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Any
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Assertion
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> CallTest
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> ConsoleTest
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Equality
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> FlatSpec
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> IfTest
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> InAndIgnoreMethods
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Int
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Matchers
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Nothing
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Position
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Predef
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Prettifier
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> ResultOfStringPassedToVerb
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> String
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> StringShouldWrapper
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> StringTest
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> StringVerbStringInvocation
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> Unit
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> _if
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> call
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> consoleLog
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> convertToInAndIgnoreMethods
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> convertToStringShouldWrapper
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> default
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> here
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> in
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> org
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> package
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> scalactic
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> scalatest
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> shorthandTestRegistrationFunction
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> should
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> shouldEqual
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> source
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> string
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> transjs
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> wrappers
product stamps:
4 items
/Users/Josh/scalaprojects/transjs/target/scala-2.12/test-classes/transjs/CallTest.class -> lastModified(1494376591000)
/Users/Josh/scalaprojects/transjs/target/scala-2.12/test-classes/transjs/ConsoleTest.class -> lastModified(1494376591000)
/Users/Josh/scalaprojects/transjs/target/scala-2.12/test-classes/transjs/IfTest.class -> lastModified(1494376591000)
/Users/Josh/scalaprojects/transjs/target/scala-2.12/test-classes/transjs/StringTest.class -> lastModified(1494376591000)
source stamps:
1 items
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> hash(3f58e973dd07359f5f21585b315ed858b5283904)
binary stamps:
3 items
/Users/Josh/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> lastModified(1480936165000)
/Users/Josh/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/Users/Josh/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
class names:
3 items
/Users/Josh/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> scala.Int
/Users/Josh/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.Equality$
/Users/Josh/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> org.scalatest.Matchers
internal apis:
1 items
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> 

external apis:
1 items
transjs.wrappers$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwT+Om6AAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAwc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwQRD07nQABm5vdGlmeXNxAH4ADEmRmht0AAJsZXNxAH4ADBuFtPx0AAZlbHNlaWZzcQB+AAwyvhCSdAAEd2FpdHNxAH4ADLexKJx0AA0kYXNJbnN0YW5jZU9mc3EAfgAMdOUGJHQABmVxdWFsc3NxAH4ADCGL4gt0AAdfcmV0dXJuc3EAfgAMPrygzHQADmZ1bmNCb2R5Q2FsbGVkc3EAfgAM0qOVt3QADGFzSW5zdGFuY2VPZnNxAH4ADOhdDVN0AAVhbGVydHNxAH4ADApt0I50AAxzeW5jaHJvbml6ZWRzcQB+AAxdMp6/dAANJGlzSW5zdGFuY2VPZnNxAH4ADKD2fKZ0AAlmdW5jQm9keVNzcQB+AAwGs4ePdAADZGl2c3EAfgAMFHc953QABnN0cmluZ3NxAH4ADJMSaDd0AAJvcnNxAH4ADFtWEfJ0AAJnZXNxAH4ADP3RfxV0AApjb25zb2xlTG9nc3EAfgAMnD7jHHQACW5vdGlmeUFsbHNxAH4ADDpk2W90AAxpc0luc3RhbmNlT2ZzcQB+AAyY0BUTdAAGX3doaWxlc3EAfgAM+vqBbHQAA3JlbXNxAH4ADOihoKB0AAltTENvbW1lbnRzcQB+AAy6Vf2VdAAKdGVtcFN0cmluZ3NxAH4ADC6hRHh0AARfZm9yc3EAfgAMmxR49nQAAj09c3EAfgAMc/RWhnQAA211bHNxAH4ADBkCr5x0AAVjbG9uZXNxAH4ADKIAWRF0AAVfZWxzZXNxAH4ADOYAsv50AAdjb21tZW50c3EAfgAMDUXi6nQABHRlcm5zcQB+AAx/QXU8dAADX2lmc3EAfgAML7M953QACHRvU3RyaW5nc3EAfgAMCCVYX3QACHdyYXBwZXJzc3EAfgAM05oS6XQAA3N1YnNxAH4ADEQilsp0AAhmdW5jQm9keXNxAH4ADHbtiXR0AAIhPXNxAH4ADKWBu/h0AAhnZXRDbGFzc3NxAH4ADNb6Tl90AAJuZXNxAH4ADCa7S/R0AARjYWxsc3EAfgAM9sw7dHQAAmx0c3EAfgAMDZN3rHQAA2FkZHNxAH4ADI8S2qp0AAJndHNxAH4ADOiFrg90AAJlcXNxAH4ADALZOj50AANhbmRzcQB+AAybuKURdAACIyNzcQB+AAwD46bRdAAIZmluYWxpemVzcQB+AAzANWN7dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgB3eHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAQdHJhbnNqcy53cmFwcGVyc3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4Aj3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgB3TAAJaW5oZXJpdGVkcQB+AHdMAAdwYXJlbnRzcQB+AHd4cQB+AJRzcQB+AI91cQB+AHIAAAAAc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4Ak3QABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Ak3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4ArHQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4ArXNxAH4AoHQAA0FueXNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKx0AAVzY2FsYXEAfgCzdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAHdHJhbnNqc3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABW+/I+GZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdAA7L1VzZXJzL0pvc2gvc2NhbGFwcm9qZWN0cy90cmFuc2pzL3RhcmdldC9zY2FsYS0yLjEyL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTaAsb54AaWlZmj518ewjj6TmYCtg==
source infos:
1 items
/Users/Josh/scalaprojects/transjs/src/test/scala/transjs/transjstests.scala -> 
AAAAAAAAAAA=
compilations:
3 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABW+wRcFd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAQC9Vc2Vycy9Kb3NoL3NjYWxhcHJvamVjdHMvdHJhbnNqcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABW+5shDR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAQC9Vc2Vycy9Kb3NoL3NjYWxhcHJvamVjdHMvdHJhbnNqcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABW+/JGYB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAQC9Vc2Vycy9Kb3NoL3NjYWxhcHJvamVjdHMvdHJhbnNqcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
